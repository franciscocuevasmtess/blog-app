#spring.application.name=blog-application
########################################


# ====================================
# CONFIGURACIÓN BÁSICA DE SPRING BOOT
# ====================================

# Nombre de la aplicación
spring.application.name=blog-application

# Puerto donde correrá la aplicación
server.port=8080

# ===============================
# CONFIGURACIÓN DE POSTGRESQL
# ===============================

# URL de conexión a la base de datos
# Formato: jdbc:postgresql://host:puerto/nombre_bd
# Si usas Docker o una instancia remota, cambia localhost por la IP correspondiente.
#spring.datasource.url=jdbc:postgresql://localhost:5432/mi_basedatos
# Configuración PostgreSQL con esquema
spring.datasource.url=jdbc:postgresql://localhost:5432/general_db?currentSchema=blog

# Usuario de la base de datos
# Usuario con permisos sobre la base de datos
spring.datasource.username=postgres

# Contraseña del usuario
#spring.datasource.password=tu_contraseña
spring.datasource.password=123

# Driver de conexión JDBC (Spring Boot lo detecta automáticamente en la mayoría de casos)
spring.datasource.driver-class-name=org.postgresql.Driver

# ===============================
# CONFIGURACIÓN DE JPA/HIBERNATE
# ===============================

# Dialecto de Hibernate para PostgreSQL
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Estrategia para el DDL (create, create-drop, update, validate, none)
# [none: No hacer nada], [validate: Validar el esquema, pero no cambiar la base de datos],
# [update: Actualizar el esquema si es necesario (el más usado en desarrollo)],
# [create: Crear el esquema, destruyendo datos previos],
# [create-drop: Crear al inicio y eliminar al terminar (útil para pruebas)].
spring.jpa.hibernate.ddl-auto=create-drop

# Mostrar las consultas SQL en los logs (útil para desarrollo)
spring.jpa.show-sql=true

# Formatear las consultas SQL en los logs
spring.jpa.properties.hibernate.format_sql=true

# Opcional: Configuración del pool de conexiones HikariCP (el que usa Spring por defecto)
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.maximum-pool-size=10

# Configuración adicional
spring.jackson.serialization.fail-on-empty-beans=false
spring.jackson.default-property-inclusion=non_null



